% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/libFM.R
\name{libFM}
\alias{libFM}
\title{libFM factorization machines}
\usage{
libFM(train, test, formula, global_bias = TRUE, variable_bias = TRUE,
  dim = 8, task = c("c", "r"), method = c("mcmc", "sgd", "als", "sgda"),
  init_stdev = 0.1, verbosity = 0, iter = 100, exe_loc)
}
\arguments{
\item{train}{training data.frame}

\item{test}{testing data.frame}

\item{formula}{formula of covariates included. They must all be factors}

\item{global_bias}{whether to include an overall/global bias term}

\item{variable_bias}{whether to include variable main effects/biases}

\item{dim}{dimension of the two-way interaction}

\item{task}{classifcation or regression}

\item{method}{learning method}

\item{init_stdev}{standard deviation used for initialization
of 2-way factors}

\item{verbosity}{how much feedback to give}

\item{iter}{number of iterations}

\item{exe_loc}{location of libfm.exe executable (if not in the PATH)}
}
\value{
A vector of the predicted values/probabilities
}
\description{
libFM factorization machines
}
\details{
See the libFM manual, \url{http://www.libfm.org/libfm-1.42.manual.pdf},
 for details on the parameters.

 If the function is not working, make sure that the directory is in the PATH
 by running \code{Sys.getenv('PATH')}. It is assumed that the executable is named
 (lowecase) \code{libfm} on Windows and (not all lowercase) \code{libFM} on
 Linux \ Mac. You can verify that the executable is being found and works by
 running either \code{system("libfm -help")} or \code{system("libFM -help")}
 on Windows or Linux \ Mac, respectively.

 See the README on \url{https://github.com/andland/libFMexe} for some more
 information.
}
\examples{
\dontrun{
data(movie_lense)
train_rows = sample.int(nrow(movie_lense), nrow(movie_lense) * 2 / 3)
train = movie_lense[train_rows, ]
test  = movie_lense[-train_rows, ]

predFM = libFM(train, test, Rating ~ User + Movie,
               task = "r", dim = 10, iter = 500)

mean((predFM - test$Rating)^2)
}
}
\references{
Steffen Rendle (2012): Factorization Machines with libFM, in ACM Trans.
Intell. Syst. Technol., 3(3), May.
}

