% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/cv_libFM.R
\name{cv_libFM}
\alias{cv_libFM}
\alias{cv_libFM.data.frame}
\alias{cv_libFM.default}
\alias{cv_libFM.matrix}
\title{Cross validation for rank and initialization standard deviation
with libFM factorization machines}
\usage{
cv_libFM(x, ...)

\method{cv_libFM}{data.frame}(x, formula, validation, grouping,
  cv_verbosity = 0, ...)

\method{cv_libFM}{matrix}(x, y, validation, y_validation, grouping,
  cv_verbosity = 0, ...)

\method{cv_libFM}{default}(x, dims = c(0, 8), init_stdevs = 0.1,
  folds = 5, validation, grouping, task = c("c", "r"), loss_function,
  cv_verbosity = 0, ...)
}
\arguments{
\item{x}{data.frame, matrix, or character vector used for cross validation}

\item{...}{arguments passed to libFM}

\item{formula}{formula of response and covariates included}

\item{validation}{validation data.frame, matrix, or character vector used for
adaptive SGD}

\item{grouping}{logical scalar or integer vector}

\item{cv_verbosity}{how much feedback to give on the progress of cross validation}

\item{y,y_validation}{numeric vectors of responses when train
  and validation are matrices}

\item{dims}{vector of the two-way interaction dimensions to try}

\item{init_stdevs}{vector of the initialization standard deviations to try}

\item{folds}{number of cross validation folds or integer vector giving the
fold ids for each row}

\item{task}{classifcation or regression}

\item{loss_function}{loss function to evaluate. See details for more information}
}
\value{
A matrix of the cross validated \code{loss_function}. There are \code{length(dims)}
  rows and \code{length(init_stdevs)} columns.
}
\description{
Cross validation for rank and initialization standard deviation
with libFM factorization machines
}
\details{
This function attempts to speed things up by converting all the data to libFM format
  first, so that there are not repetitive and computationally-costly data conversions.

  If unspecified, \code{loss_function} will be mean squared error for regression or
  mean Bernoulli deviance for classification. You can specify your own function also.
  \code{loss_function} must be a function that takes two vector arguments and returns a scalar numeric.
  The first argument is the predicted value / probability and the second is the true value.
}
\section{Methods (by class)}{
\itemize{
\item \code{data.frame}: 

\item \code{matrix}: 

\item \code{default}: 
}}
\examples{
\dontrun{
data(movie_lens)
mses = cv_libFM(movie_lens, Rating ~ User + Movie,
                task = "r", dims = c(0, 5, 10), cv_verbosity = 1)
mses
}
}
\seealso{
\code{\link{libFM}}
}

